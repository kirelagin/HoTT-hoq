import Nat
import Homotopy.GeneralisedSuspension


s-emb : (A B : Type) -> (f : A -> B) -> (GSusp A B f -> GSusp B B id)
s-emb _ _ _ (west x)  = west x
s-emb _ _ _ (east x)  = east x
s-emb _ _ f (side x i) = side (f x) i

n-Cube-dCube : Nat -> Sigma-T1 Type (\A -> Sigma-T1 Type (\B -> B -> A))
n-Cube-dCube zero = One , (Empty , empty-elim)
n-Cube-dCube (succ n) = GSusp ((n-Cube-dCube n).proj1)
                              ((n-Cube-dCube n).proj1)
                              id
                        ,
                        GSusp ((n-Cube-dCube n).proj2.proj1)
                              ((n-Cube-dCube n).proj1)
                              ((n-Cube-dCube n).proj2.proj2)
                        ,
                        s-emb ((n-Cube-dCube n).proj2.proj1)
                              ((n-Cube-dCube n).proj1)
                              ((n-Cube-dCube n).proj2.proj2)

n-Cube : Nat -> Type
n-Cube n = (n-Cube-dCube n).proj1

n-dCube : Nat -> Type
n-dCube n = (n-Cube-dCube n).proj2.proj1

n-dCube-emb : (n : Nat) -> (n-dCube n -> n-Cube n)
n-dCube-emb n = (n-Cube-dCube n).proj2.proj2
